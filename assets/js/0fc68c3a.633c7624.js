"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[3948],{3905:(t,e,i)=>{i.d(e,{Zo:()=>c,kt:()=>h});var a=i(67294);function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function r(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,a)}return i}function o(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?r(Object(i),!0).forEach((function(e){n(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function s(t,e){if(null==t)return{};var i,a,n=function(t,e){if(null==t)return{};var i,a,n={},r=Object.keys(t);for(a=0;a<r.length;a++)i=r[a],e.indexOf(i)>=0||(n[i]=t[i]);return n}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)i=r[a],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(n[i]=t[i])}return n}var l=a.createContext({}),p=function(t){var e=a.useContext(l),i=e;return t&&(i="function"==typeof t?t(e):o(o({},e),t)),i},c=function(t){var e=p(t.components);return a.createElement(l.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var i=t.components,n=t.mdxType,r=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=p(i),g=n,h=u["".concat(l,".").concat(g)]||u[g]||d[g]||r;return i?a.createElement(h,o(o({ref:e},c),{},{components:i})):a.createElement(h,o({ref:e},c))}));function h(t,e){var i=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var r=i.length,o=new Array(r);o[0]=g;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[u]="string"==typeof t?t:n,o[1]=s;for(var p=2;p<r;p++)o[p]=i[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}g.displayName="MDXCreateElement"},32499:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=i(87462),n=(i(67294),i(3905));const r={sidebar_position:4},o="The distribution of GDP per capita",s={unversionedId:"data_visualisation/data_visualisation_with_ggplot2/distribution",id:"data_visualisation/data_visualisation_with_ggplot2/distribution",title:"The distribution of GDP per capita",description:"In the rest of this tutorial we'll show various ways to create good-looking visualisations with",source:"@site/docs/data_visualisation/data_visualisation_with_ggplot2/002_distribution.md",sourceDirName:"data_visualisation/data_visualisation_with_ggplot2",slug:"/data_visualisation/data_visualisation_with_ggplot2/distribution",permalink:"/chg-training-resources/data_visualisation/data_visualisation_with_ggplot2/distribution",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/data_visualisation/data_visualisation_with_ggplot2/002_distribution.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"sidebar3",previous:{title:"A first look at Gapminder data",permalink:"/chg-training-resources/data_visualisation/data_visualisation_with_ggplot2/gapminder"},next:{title:"The distribution of GDP per capita, by continent",permalink:"/chg-training-resources/data_visualisation/data_visualisation_with_ggplot2/distribution2"}},l={},p=[],c={toc:p},u="wrapper";function d(t){let{components:e,...r}=t;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-distribution-of-gdp-per-capita"},"The distribution of GDP per capita"),(0,n.kt)("p",null,"In the rest of this tutorial we'll show various ways to create good-looking visualisations with\nthis data.  Let's get started."),(0,n.kt)("p",null,"Histograms are ok - they summarise the empirical distribution of data in a largely transparent way.\nHowever they look a bit jaggedy - the true distribution is probably a lot smoother than that. One\noption is instead to plot a ",(0,n.kt)("em",{parentName:"p"},"smoothed histogram"),", or ",(0,n.kt)("em",{parentName:"p"},"density plot"),". That's easy with ggplot -\nlet's plot the GDP per capita this way:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-{r",metastring:"gapminder_gdp}","gapminder_gdp}":!0},'p2_1 <- ggplot(data = d, mapping = aes(x = gdpPercap)) +\n  geom_density() +\n  labs(x = "GDP per capita", y = "Density")\n\np2_1\n')),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"img",src:i(61557).Z,width:"400",height:"300"})),(0,n.kt)("p",null,"As before let's change the scale of the x-axis to a log scale"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-{r",metastring:'gapminder_gdp_log, fig.show="hide"}',"gapminder_gdp_log,":!0,"fig.show":'"hide"}'},'p2_1 + scale_x_continuous(trans = "log10") \n# or scale_x_log10()\n')),(0,n.kt)("p",null,"...and make the axis breaks prettier"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-{r",metastring:"gapminder_gdp_pretty}","gapminder_gdp_pretty}":!0},'p2_1 + scale_x_continuous(\n    trans = "log10",\n    breaks = c(0, 1000, 5000, 10000, 50000, 150000)\n)\n')),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"img",src:i(36017).Z,width:"400",height:"300"})),(0,n.kt)("p",null,"Nice! But hmm... this is a bit odd looking - it has has at least two bumps. Let's next try to see\nif this is caused by the distribution of GDP per capita differing in different continents."))}d.isMDXComponent=!0},61557:(t,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/gdp_density_1-8338dee70ce220736646637685f9adee.png"},36017:(t,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/gdp_density_2-f1df37689ea009ab677046e7cf2ccc23.png"}}]);