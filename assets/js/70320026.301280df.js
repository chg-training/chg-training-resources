"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[9990],{3905:(e,a,t)=>{t.d(a,{Zo:()=>l,kt:()=>h});var n=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function m(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=n.createContext({}),o=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},l=function(e){var a=o(e.components);return n.createElement(p.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},N=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),c=o(t),N=s,h=c["".concat(p,".").concat(N)]||c[N]||d[N]||i;return t?n.createElement(h,r(r({ref:a},l),{},{components:t})):n.createElement(h,r({ref:a},l))}));function h(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var i=t.length,r=new Array(i);r[0]=N;var m={};for(var p in a)hasOwnProperty.call(a,p)&&(m[p]=a[p]);m.originalType=e,m[c]="string"==typeof e?e:s,r[1]=m;for(var o=2;o<i;o++)r[o]=t[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}N.displayName="MDXCreateElement"},4050:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>m,toc:()=>o});var n=t(87462),s=(t(67294),t(3905));const i={sidebar_position:5},r="Estimating relatedness",m={unversionedId:"genome_wide_association_studies/quantitative_trait_gwas/relatedness",id:"genome_wide_association_studies/quantitative_trait_gwas/relatedness",title:"Estimating relatedness",description:"Now let's estimate the relatedness between different individuals in the dataset.",source:"@site/docs/genome_wide_association_studies/quantitative_trait_gwas/relatedness.md",sourceDirName:"genome_wide_association_studies/quantitative_trait_gwas",slug:"/genome_wide_association_studies/quantitative_trait_gwas/relatedness",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/relatedness",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/genome_wide_association_studies/quantitative_trait_gwas/relatedness.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"sidebar8",previous:{title:"Part 1: Quality control of genotype data",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/qc_genotypes"},next:{title:"Aside: excluding related samples",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness"}},p={},o=[{value:"Genome-wide relatedness",id:"genome-wide-relatedness",level:2},{value:"Plotting relatedness",id:"plotting-relatedness",level:2}],l={toc:o},c="wrapper";function d(e){let{components:a,...i}=e;return(0,s.kt)(c,(0,n.Z)({},l,i,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"estimating-relatedness"},"Estimating relatedness"),(0,s.kt)("p",null,"Now let's estimate the relatedness between different individuals in the dataset."),(0,s.kt)("h2",{id:"genome-wide-relatedness"},"Genome-wide relatedness"),(0,s.kt)("p",null,"In doing this we are typically interested in ",(0,s.kt)("strong",{parentName:"p"},"genome-wide patterns of relatedness"),", so a good idea is to capture as many 'independent' regions of the genome as possible.  Local LD patterns which arise due to random genetic drift, are of less interest to us for this purpose.  So to do this, it's typical to first 'prune' the dataset by LD to produce a set of variants that are approximately in linkage equilibrium, removing tightly linked regions of the genome that could influence relatedness calculations.  "),(0,s.kt)("p",null,"There are a few ways one could do this including simply thinning data by position, but the most often-used method in ",(0,s.kt)("inlineCode",{parentName:"p"},"plink"),"is to prune variants so that there are none left above a particular linkage disequilibrium ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"R"),(0,s.kt)("mn",{parentName:"msup"},"2"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R^2")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2"))))))))))))," cutoff.  (Here ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"R")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R")))))," denotes the correlation in genotypes between two loci.)  We'll use a cutoff of ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"0.2")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0.2")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"0.2")))))," here, that is, will remove one of each pair of variants that have ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"R"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("mn",{parentName:"mrow"},"20")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R^2>20%")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8532em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"20"))))),". "),(0,s.kt)("p",null,"The command will produce two output files containing variants to retain in the data (",(0,s.kt)("inlineCode",{parentName:"p"},"AMR_genotypes.prune.in"),") or to exclude from the data (",(0,s.kt)("inlineCode",{parentName:"p"},"AMR_genotypes.prune.out"),") for relatedness calculations."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"./plink \\\n--bfile Genotype_data/AMR_genotypes \\\n--indep-pairwise 50 5 0.2 \\\n--out output/AMR_genotypes\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},(0,s.kt)("inlineCode",{parentName:"p"},"--indep-pairwise")," actually works in overlapping windows along the genome, and excludes variants within each window so that none remain with greater than the given threshold.  The arguments ",(0,s.kt)("inlineCode",{parentName:"p"},"50 50 0.2"),' can be read as: "work in windows of 50 variants, shifting by 5 variants each time, and exclude variants with ',(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"R"),(0,s.kt)("mn",{parentName:"msup"},"2")),(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("mn",{parentName:"mrow"},"20")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R^2 > 20%")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8532em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"20"))))),'." (See the ',(0,s.kt)("a",{parentName:"p",href:"https://www.cog-genomics.org/plink/1.9/ld#indep"},(0,s.kt)("inlineCode",{parentName:"a"},"--indep-pairwise")," documentation")," for more information.)"))),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Caution")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"There is also a danger of using LD-based pruning like this.  Because LD arises when variants 'drift' (or are selected) up to high frequency, common variants are ",(0,s.kt)("strong",{parentName:"p"},"more likely to be in high ",(0,s.kt)("span",{parentName:"strong",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msup",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msup"},"R"),(0,s.kt)("mn",{parentName:"msup"},"2"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R^2")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2"))))))))))))," with each other"),".  In pracrice this means that this approach is likely to skew the frequency distribution of the variants.  You can see that by summarising in this data:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-r"},'frequencies = readr::read_table( "output/AMR_genotypes.frq" )\nincluded_snps = scan( "output/AMR_genotypes.prune.in", what = character() )\nfrequencies$included = (frequencies$SNP %in% included_snps)\n\n(\n    frequencies\n    %>% group_by( included )\n    %>% summarise(\n        low = length( which( (MAF < 0.05))),\n        total = n()\n    )\n    %>% mutate( low_proportion = low/total )\n)\n')),(0,s.kt)("p",{parentName:"div"},"which will print something like:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-r"},"# A tibble: 2 \xd7 4\n  included   low total low_proportion\n  <lgl>    <int> <int>          <dbl>\n1 FALSE     1596  3495          0.457\n2 TRUE       853  1337          0.638\n")),(0,s.kt)("p",{parentName:"div"},"The pruning has reduced the overall frequency of the variants."),(0,s.kt)("p",{parentName:"div"},"Another, simpler approach to pruning is simply to exclude variants by physical position - or else by position in a recombination map.  For example, ",(0,s.kt)("a",{parentName:"p",href:"https://www.nature.com/articles/nature10251"},"this GWAS of Multiple Sclerosis")," used intervals of ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mn",{parentName:"mrow"},"0.25"),(0,s.kt)("mtext",{parentName:"mrow"},"centi-Morgans"),(0,s.kt)("mo",{parentName:"mrow"},"\xb1"),(0,s.kt)("mn",{parentName:"mrow"},"25"),(0,s.kt)("mtext",{parentName:"mrow"},"kb")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0.25 \\text{centi-Morgans} \\pm 25\\text{kb}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"0.25"),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"centi-Morgans")),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\xb1"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"25"),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"kb")))))),", determined using the HapMap combined recombination map, to define 'independent' association intervals.  "),(0,s.kt)("p",{parentName:"div"},"We'll stick with the LD pruning for now."))),(0,s.kt)("p",null,"We can now use one of these files in combination with the ",(0,s.kt)("inlineCode",{parentName:"p"},"--genome")," flag to generate a relatedness summary table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"./plink \\\n--bfile Genotype_data/AMR_genotypes \\\n--exclude output/AMR_genotypes.prune.out \\\n--genome \\\n--out output/AMR_genotypes.relatedness\n")),(0,s.kt)("h2",{id:"plotting-relatedness"},"Plotting relatedness"),(0,s.kt)("p",null,"If you look at the output file ",(0,s.kt)("inlineCode",{parentName:"p"},"AMR_genotypes.relatedness.genome")," using e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"less")," you'll see it looks something like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"     FID1      IID1      FID2      IID2 RT    EZ      Z0      Z1      Z2  PI_HAT PHE       DST     PPC   RATIO\n     AMR_0     AMR_0     AMR_1     AMR_1 UN    NA  1.0000  0.0000  0.0000  0.0000  -1  0.889992  0.0787  0.8000\n     AMR_0     AMR_0     AMR_2     AMR_2 UN    NA  1.0000  0.0000  0.0000  0.0000  -1  0.882376  0.8944  7.0000\n     AMR_0     AMR_0     AMR_3     AMR_3 UN    NA  0.6243  0.3757  0.0000  0.1878  -1  0.901750  0.7603  3.5000\n     AMR_0     AMR_0     AMR_4     AMR_4 UN    NA  0.7987  0.2013  0.0000  0.1006  -1  0.893795  0.9214  8.0000\n     AMR_0     AMR_0     AMR_5     AMR_5 UN    NA  0.7417  0.2583  0.0000  0.1292  -1  0.898574  0.9214  8.0000\n     AMR_0     AMR_0     AMR_6     AMR_6 UN    NA  0.8491  0.1509  0.0000  0.0755  -1  0.891860  0.3274  1.5000\n     AMR_0     AMR_0     AMR_7     AMR_7 UN    NA  0.9898  0.0102  0.0000  0.0051  -1  0.893302  0.9214  8.0000\n     AMR_0     AMR_0     AMR_8     AMR_8 UN    NA  0.9105  0.0775  0.0120  0.0507  -1  0.897525  0.5000  2.0000\n")),(0,s.kt)("p",null,"It has one set of results ",(0,s.kt)("strong",{parentName:"p"},"for every pair of samples")," in the data.  On each row, the first sample is identified by ",(0,s.kt)("inlineCode",{parentName:"p"},"IID1"),", and the second by ",(0,s.kt)("inlineCode",{parentName:"p"},"IID2"),"."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"These files also contain ",(0,s.kt)("inlineCode",{parentName:"p"},"FID")," fields.  Nominally, these are used to indicate 'family identifiers'.  However, in this GWAS, we have sampled individuals randomly so they weren't collected in families, so we've just set the ",(0,s.kt)("inlineCode",{parentName:"p"},"FID")," the same as the ",(0,s.kt)("inlineCode",{parentName:"p"},"IID"),"."))),(0,s.kt)("p",null,"Let's load that into R and plot it.  We'll plot ",(0,s.kt)("inlineCode",{parentName:"p"},"PI_HAT")," which is the estimated proportion of the genome shared\n'identical by descent' (IBD) between the two samples.  To plot it we'll first load the data and turn the data into\nmatrix form - this requires a bit of code to do.  First, let's load the data and get a list of samples:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'ibd = readr::read_table( "output/AMR_genotypes.relatedness.genome" )\nsamples = unique( c( ibd$IID1, ibd$IID2 ) )\n')),(0,s.kt)("p",null,"First, we'll turn the identifiers into indexes so we can index rows of the matrix:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"ibd$index1 = as.integer( factor( ibd$IID1, levels = samples ))\nibd$index2 = as.integer( factor( ibd$IID2, levels = samples ))\n")),(0,s.kt)("p",null,"Now let's create a matrix to put the results in:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"N = length(samples)\nibd_matrix = matrix(\n    NA,\n    nrow = N,\n    ncol = N,\n    dimnames = list( samples, samples )\n)\n")),(0,s.kt)("p",null,"Finally, we can use a short-hand syntax to fill in the values:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'ibd_matrix[ as.matrix(ibd[,c("index1", "index2")]) ] = ibd$PI_HAT\nimage(\n    ibd_matrix,\n    x = 1:N,\n    y = 1:N\n)\n')),(0,s.kt)("p",null,"Cool!  However, a nicer plot can be made with the ",(0,s.kt)("inlineCode",{parentName:"p"},"pheatmap")," package.  To make this work we'll fill in the lower diagaonal as well:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'ibd_matrix[ as.matrix(ibd[,c("index2", "index1")]) ] = ibd$PI_HAT\npheatmap(\n    ibd_matrix,\n    show_rownames = FALSE,\n    show_colnames = FALSE,\n    treeheight_row = 0,\n    treeheight_col = 0\n)\n')),(0,s.kt)("p",null,"This might take a moment or two... and you should see something like this:\n",(0,s.kt)("img",{alt:"img",src:t(5995).Z,width:"889",height:"886"})),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"It would also be useful to plot a ",(0,s.kt)("strong",{parentName:"p"},"histogram of IBD values")," - can you do that?"),(0,s.kt)("p",{parentName:"div"},"What pair of samples has the most IBD?"))),(0,s.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"A note about these relatedness values")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The data we are looking at here are actually simulated from a small region (about 5Mb) of the genome.  Because of that\nit is not possible to accurately calculate relatedness between individuals in this data - what you are looking at is\ntherefore a not-very accurate estimate of relatedness based on just these data."),(0,s.kt)("p",{parentName:"div"},"In a real GWAS, if samples were supposed to be sampled independently, finding high relatedness might be unexpected and\nso you might typically want to remove one of each pair of closely related samples.  We'll see how you could do that in a\nmoment."))))}d.isMDXComponent=!0},5995:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/relatedness-4e23de4845679b474ae63c7e671ea390.png"}}]);