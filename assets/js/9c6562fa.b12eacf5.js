"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[6715],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},72360:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(67294),n=r(86010);const o={tabItem:"tabItem_OmH5"};function i(e){let{children:t,hidden:r,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,i),hidden:r},t)}},9877:(e,t,r)=>{r.d(t,{Z:()=>d});var a=r(87462),n=r(67294),o=r(72389),i=r(67392),s=r(7094),l=r(12466),c=r(86010);const u={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function p(e){const{lazy:t,block:r,defaultValue:o,values:p,groupId:d,className:m}=e,f=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??f.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),g=(0,i.l)(b,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===o?o:o??f.find((e=>e.props.default))?.props.value??f[0]?.props.value;if(null!==h&&!b.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:_}=(0,s.U)(),[k,y]=(0,n.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:N}=(0,l.o5)();if(null!=d){const e=v[d];null!=e&&e!==k&&b.some((t=>t.value===e))&&y(e)}const x=e=>{const t=e.currentTarget,r=w.indexOf(t),a=b[r].value;a!==k&&(N(t),y(a),null!=d&&_(d,a))},T=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=w.indexOf(e.currentTarget)+1;t=w[r]||w[0];break}case"ArrowLeft":{const r=w.indexOf(e.currentTarget)-1;t=w[r]||w[w.length-1];break}}t?.focus()};return n.createElement("div",{className:(0,c.Z)("tabs-container",u.tabList)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":r},m)},b.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>w.push(e),onKeyDown:T,onFocus:x,onClick:x},o,{className:(0,c.Z)("tabs__item",u.tabItem,o?.className,{"tabs__item--active":k===t})}),r??t)}))),t?(0,n.cloneElement)(f.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function d(e){const t=(0,o.Z)();return n.createElement(p,(0,a.Z)({key:String(t)},e))}},66679:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var a=r(87462),n=(r(67294),r(3905)),o=r(9877),i=r(72360);const s={sidebar_position:1},l="The read_gff() function",c={unversionedId:"bioinformatics/making_an_R_package/read_gff",id:"bioinformatics/making_an_R_package/read_gff",title:"The read_gff() function",description:"Before starting make sure you have a working read_gff() function.",source:"@site/docs/bioinformatics/making_an_R_package/read_gff.md",sourceDirName:"bioinformatics/making_an_R_package",slug:"/bioinformatics/making_an_R_package/read_gff",permalink:"/chg-training-resources/bioinformatics/making_an_R_package/read_gff",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/bioinformatics/making_an_R_package/read_gff.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebar2",previous:{title:"Making an R or python package",permalink:"/chg-training-resources/bioinformatics/making_an_R_package/"},next:{title:"Taking the easy way",permalink:"/chg-training-resources/bioinformatics/making_an_R_package/single_file"}},u={},p=[],d={toc:p},m="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-read_gff-function"},"The read_gff() function"),(0,n.kt)("p",null,"Before starting make sure you have a working ",(0,n.kt)("inlineCode",{parentName:"p"},"read_gff()")," function.\nIf you don't have it - here is the code:"),(0,n.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,n.kt)("div",{parentName:"div",className:"admonition-heading"},(0,n.kt)("h5",{parentName:"div"},(0,n.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,n.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,n.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,n.kt)("div",{parentName:"div",className:"admonition-content"},(0,n.kt)(o.Z,{groupId:"solutions",mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"teaser",label:"Your code",mdxType:"TabItem"},(0,n.kt)("p",{parentName:"div"},"Use your own code, if it works, or see the tabs for my version."),(0,n.kt)("p",{parentName:"div"},(0,n.kt)("strong",{parentName:"p"},"Note")," in my version I've implemented the ",(0,n.kt)("a",{parentName:"p",href:"../programming_with_gene_annotations3/b_more_attributes.md"},"challenge questions about extra attributes"),", which are kindof useful to have!")),(0,n.kt)(i.Z,{value:"R",label:"R solution",mdxType:"TabItem"},(0,n.kt)("pre",{parentName:"div"},(0,n.kt)("code",{parentName:"pre"},"read_gff = function( filename, extra_attributes = c() ) {\n    result = readr::read_tsv(\n        filename,\n        comment = '#',\n        na = \".\",\n        col_names = c( 'seqid', 'source', 'type', 'start', 'end', 'score', 'strand', 'phase', 'attributes' ),\n        col_types = readr::cols(\n            readr::col_character(),\n            readr::col_character(),\n            readr::col_character(),\n            readr::col_integer(),\n            readr::col_double(),\n            readr::col_double(),\n            readr::col_character(),\n            readr::col_integer(),\n            readr::col_character()\n        )\n    )\n\n    # Let's put ID and Parent at the start.\n    result = tibble::add_column(result, ID = NA, .before = 1)\n    result = tibble::add_column(result, Parent = NA, .before = 2)\n\n    # Now extract all the attributes\n    for( attribute in c( \"ID\", \"Parent\", extra_attributes )) {\n        # Create the appropriate regex using `sprintf()`\n        regex = sprintf(\"%s=([^;]+)[;|$]\", attribute)\n        # Extract the attribute...\n        result[[attribute]] = stringr::str_extract(result[[\"attributes\"]], regex, group = TRUE)\n        # ...and remove it from the attributes column.\n        result[[\"attributes\"]] = stringr::str_remove(result[[\"attributes\"]], regex)\n    }\n    return( result )\n}\n"))),(0,n.kt)(i.Z,{value:"python",label:"Python solution",mdxType:"TabItem"},(0,n.kt)("pre",{parentName:"div"},(0,n.kt)("code",{parentName:"pre"},"def read_gff( file, extra_attributes = [] ):\n    import pandas\n    result = pandas.read_table(\n        file,\n        comment = '#',\n        names = [ 'seqid', 'source', 'type', 'start', 'end', 'score', 'strand', 'phase', 'attributes' ],\n        na_values = '.',\n        dtype = {\n            'seqid': str,\n            'source': str,\n            'type': str,\n            'start': int,\n            'end': int,\n            'score': float,\n            'strand': str,\n            'phase': str,\n            'attributes': str\n        }\n    )\n    result.insert( loc = 0, column = 'ID', value = None )\n    result.insert( loc = 1, column = 'Parent', value = None )\n    for attribute in [ 'ID', 'Parent' ] + extra_attributes:\n        regexp = '%s=([^;]+)[;|$]' % attribute\n        result[attribute] = result.attributes.str.extract( regexp )\n        result[\"attributes\"] = result[\"attributes\"].str.replace( regexp, \"\" )\n    return result\n")))))))}f.isMDXComponent=!0}}]);