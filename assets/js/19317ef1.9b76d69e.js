"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[6350],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(t),d=o,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(g,a(a({ref:n},c),{},{components:t})):r.createElement(g,a({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},58923:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var r=t(87462),o=(t(67294),t(3905));const i={},a="Appendix: solutions",p={unversionedId:"statistical_modelling/introduction/appendix/README",id:"statistical_modelling/introduction/appendix/README",title:"Appendix: solutions",description:"Here is a solution to the forest plot question.",source:"@site/docs/statistical_modelling/introduction/appendix/README.md",sourceDirName:"statistical_modelling/introduction/appendix",slug:"/statistical_modelling/introduction/appendix/",permalink:"/chg-training-resources/statistical_modelling/introduction/appendix/",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/statistical_modelling/introduction/appendix/README.md",tags:[],version:"current",frontMatter:{}},s={},l=[],c={toc:l},u="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"appendix-solutions"},"Appendix: solutions"),(0,o.kt)("p",null,"Here is a solution to the ",(0,o.kt)("a",{parentName:"p",href:"/chg-training-resources/statistical_modelling/introduction/allele_frequencies_2"},"forest plot question"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"compute_posterior_summary = function(\n    nA, nB,\n    prior = c( nA = 0, nB = 0 )\n) {\n    return(\n        data.frame(\n            posterior_mean = (nB+prior['nB'])/(nA+prior['nA']+nB+prior['nB']),\n            q2.5 = qbeta( p = 0.025, shape1 = nB+prior['nB']+1, shape2 = nA+prior['nB']+1 ),\n            q97.5 = qbeta( p = 0.975, shape1 = nB+prior['nB']+1, shape2 = nA+prior['nB']+1 )\n        )\n    )\n}\n\n\nposterior_summary = rbind(\n    data\n    %>% mutate(\n        nA = ( `C/C` + `-/C` ),\n        nB = ( `-/-` )\n    )\n    %>% group_by( population )\n    %>% summarise( compute_posterior_summary( nA, nB, prior = c( nA = 0, nB = 0 )))\n    %>% mutate( prior = \"none\" ),\n        data\n    %>% mutate(\n        nA = ( `C/C` + `-/C` ),\n        nB = ( `-/-` )\n    )\n    %>% group_by( population )\n    %>% summarise( compute_posterior_summary( nA, nB, prior = c( nA = 5, nB = 5 )))\n    %>% mutate( prior = \"5,5\" )\n)\n\np = (\n    ggplot( data = posterior_summary )\n    + geom_point( aes( x = posterior_mean, y = population ))\n    + geom_segment( aes( x = q2.5, xend = q97.5, y = population, yend = population ))\n    # Always make your plot have good axis labels!\n    + xlab( \"Posterior mean and 95% CI\" )\n    + ylab( \"Population\" )\n    # A clean, large-font theme:\n    + theme_minimal(16)\n    # Rotate y axis label so it's not at 90 degrees:\n    + theme( axis.title.y = element_text( angle = 0, vjust = 0.5 ))\n    + facet_grid( . ~ prior)\n)\nprint(p)\n")))}m.isMDXComponent=!0}}]);