"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[8154],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(a),m=i,f=c["".concat(d,".").concat(m)]||c[m]||l[m]||o;return a?n.createElement(f,r(r({ref:t},u),{},{components:a})):n.createElement(f,r({ref:t},u))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[c]="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},98906:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const o={sidebar_position:8.5},r="Part 5: Imputation",s={unversionedId:"genome_wide_association_studies/quantitative_trait_gwas/imputed_data",id:"genome_wide_association_studies/quantitative_trait_gwas/imputed_data",title:"Part 5: Imputation",description:"Genotype imputation allows us to test associations at ungenotyped markers, increase genotyping density for fine-mapping",source:"@site/docs/genome_wide_association_studies/quantitative_trait_gwas/imputed_data.md",sourceDirName:"genome_wide_association_studies/quantitative_trait_gwas",slug:"/genome_wide_association_studies/quantitative_trait_gwas/imputed_data",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/imputed_data",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/genome_wide_association_studies/quantitative_trait_gwas/imputed_data.md",tags:[],version:"current",sidebarPosition:8.5,frontMatter:{sidebar_position:8.5},sidebar:"sidebar8",previous:{title:"Part 4: Working with population substructure and multi-ethnic populations",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/population_structure"},next:{title:"Part 6: Interpreting GWAS signals",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/interpretation"}},d={},p=[{value:"QC of imputed data",id:"qc-of-imputed-data",level:2}],u={toc:p},c="wrapper";function l(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"part-5-imputation"},"Part 5: Imputation"),(0,i.kt)("p",null,"Genotype imputation allows us to test associations at ungenotyped markers, increase genotyping density for fine-mapping\nof GWAS signals, or combine datasets that were genotyped on different arrays. Genotyping arrays are limited by the\nnumber of SNPs and variants that can be included in the array. Genotype imputation is a method by which we can use our\ngenotype data and additional reference data to statistically infer missing genotypes. This additional data could include\ndata from other genotype arrays, whole genome sequences, exome capture, etc. There are a number of publicly available\ndatabases which could be used as reference data, such as the 1000 Genomes Project, the Haplotype Reference Consortium,\nand the GNOMAD database."),(0,i.kt)("p",null,"At its core, imputation works on the basis on comparing observed genotypes for each sample with those present in a\nreference panel then using intersecting markers to identify reference haplotypes that are most similar to each sample\nand fill the gaps in the genotyped sample. The choice of reference population is important when imputing genotype data.\nDifferent populations will have different frequencies of alleles, and varying LD across the genome, both of which can\naffect the accuracy of imputation. Populations may also have novel variants that are not present elsewhere, that are not\nlikely to be successfully imputed if it is not present within the reference population. "),(0,i.kt)("p",null,"We have provided imputed genotype data for each of the sample datasets in ",(0,i.kt)("inlineCode",{parentName:"p"},"Imputed_data/"),". The imputed data is generated\nfrom the genotype data that you have been working with above, and imputed using SHAPEIT and IMPUTE2 with the entire 1000\nGenomes phase 3 dataset as the reference panel."),(0,i.kt)("p",null,"IMPUTE2 provides data in the ",(0,i.kt)("a",{parentName:"p",href:"/chg-training-resources/genome_wide_association_studies/file_formats/#oxford-format"},"Oxford format"),". Genotype data is stored in ",(0,i.kt)("inlineCode",{parentName:"p"},".gen")," files\nand the associated sample information is saved in the ",(0,i.kt)("inlineCode",{parentName:"p"},".sample"),' file. GCTA does not support this format, so to run the\nregression using a GRM, you will need to convert to "best-guess" phenotypes using PLINK then provide these files to\nGCTA.'),(0,i.kt)("h2",{id:"qc-of-imputed-data"},"QC of imputed data"),(0,i.kt)("p",null,"Before running regression analyses with imputed data, it is good practice to check the quality of your imputation and\nfilter out low-quality data. Additional information about the imputation stats for each marker can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},".info"),'\nfiles. We are going to use this data to check the imputation quality for each population and create a list of poorly\nimputed markers to exclude from the association tests. This file contains an "info score" for each marker representing\nthe observed statistical information associated with allele frequency estimates, and a "certainty" which represents the\naverage certainty of best-guess genotypes. More information about the file format can be found on the IMPUTE website.'),(0,i.kt)("p",null,"First we are going to check the distribution of info scores for each imputed marker.  Here is an example script to do\nthis:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'library(ggplot2)\n\n# Read in the info file\ndata <- readr::read_table( "Imputed_data/AMR_imputed.info" )\n\n# Provide a filename for the filtered output\nfiltered_variants <- "Imputed_data/AMR_imputed.exclude.list"\n\nexclude_data <- subset( data, info <= 0.3 )\n\nreadr::write_tsv(\n    exclude_data$rs_id,\n    file = filtered_variants\n)\n\np <- (\n    ggplot(\n        data = data,\n        mapping = aes( x = info )\n    )\n    + geom_histogram( binwidth = 0.01 )\n    + labs( title="Imputation info score", x="info score", y="count" )\n)\nggsave( p, file = "AMR.info_score.png" )\n    ```\n\nYou should see that a fair number of variants have **low IMPUTE info scores** but many have high scores.\nFor this analysis we\'ve excluded variants with `info < 0.3`.\n\nThis script will have generated a list of markers (`AMR_imputed.exclude.list``) to exclude from downstream analyses. We\ncan then convert the gen file to PLINK format using the following command:\n\n```sh\n./plink \\\n--gen Imputed_data/AMR_imputed.gen.gz \\\n--sample Imputed_data/AMR_imputed.sample \\\n--exclude Imputed_data/AMR_imputed.exclude.list \\\n--oxford-single-chr 19 \\\n--make-bed \\\n--out Imputed_data/AMR_imputed.filtered\n')),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Now go and run the association tests as above, using the filtered imputed data."),(0,i.kt)("p",{parentName:"div"},"How do the associations change when using genotyped or imputed data?"),(0,i.kt)("p",{parentName:"div"},"What are some possible reasons for this?"))))}l.isMDXComponent=!0}}]);