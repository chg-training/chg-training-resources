"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[3524],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>g});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),c=l(a),d=s,g=c["".concat(p,".").concat(d)]||c[d]||h[d]||i;return a?n.createElement(g,o(o({ref:t},m),{},{components:a})):n.createElement(g,o({ref:t},m))}));function g(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,o=new Array(i);o[0]=d;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r[c]="string"==typeof e?e:s,o[1]=r;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},46748:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var n=a(87462),s=(a(67294),a(3905));const i={sidebar_position:.5},o="Visualising haplotypes in R",r={unversionedId:"population_genetics/plotting_haplotypes/README",id:"population_genetics/plotting_haplotypes/README",title:"Visualising haplotypes in R",description:"In this page you will load up some real haplotype data (from the 1000 Genomes Project) and plot it in R.",source:"@site/docs/population_genetics/plotting_haplotypes/README.md",sourceDirName:"population_genetics/plotting_haplotypes",slug:"/population_genetics/plotting_haplotypes/",permalink:"/chg-training-resources/population_genetics/plotting_haplotypes/",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/population_genetics/plotting_haplotypes/README.md",tags:[],version:"current",sidebarPosition:.5,frontMatter:{sidebar_position:.5},sidebar:"sidebar7",previous:{title:"Population genetics",permalink:"/chg-training-resources/population_genetics/"},next:{title:"tbc",permalink:"/chg-training-resources/population_genetics/plotting_haplotypes/tbc"}},p={},l=[{value:"Improving the plot",id:"improving-the-plot",level:2},{value:"Plotting genes",id:"plotting-genes",level:2},{value:"Ordering the haplotypes",id:"ordering-the-haplotypes",level:2},{value:"Computing diversity",id:"computing-diversity",level:2},{value:"Challenge questions",id:"challenge-questions",level:2}],m={toc:l},c="wrapper";function h(e){let{components:t,...i}=e;return(0,s.kt)(c,(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"visualising-haplotypes-in-r"},"Visualising haplotypes in R"),(0,s.kt)("p",null,"In this page you will load up some real haplotype data (from the 1000 Genomes Project) and plot it in R."),(0,s.kt)("p",null,"Start by downloading the file ",(0,s.kt)("inlineCode",{parentName:"p"},"GWD_30x_calls.filtered.tsv.gz")," from ",(0,s.kt)("a",{parentName:"p",href:"https://www.chg.ox.ac.uk/bioinformatics/training/gms/data/"},"this folder")," and loading into R:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'gwd = readr::read_tsv( "https://www.chg.ox.ac.uk/bioinformatics/training/gms/data/GWD_30x_calls.filtered.tsv.gz" )\n\nprint(gwd)\n')),(0,s.kt)("p",null,"Have a look at the data.  The data consists of genotype calls for 112 'Gambian from the Western Division' individuals\nfrom the recent high-coverage sequencing of ",(0,s.kt)("a",{parentName:"p",href:"https://www.internationalgenome.org"},"1000 Genomes Project")," samples."),(0,s.kt)("p",null,"It has data for >30,000 biallelic SNPs (in rows) from the range ",(0,s.kt)("inlineCode",{parentName:"p"},"chr19:48,146,028-49,255,722"),", and information for 224\nhaplotypes in columns (two for each individual, of course, because we are diploid)."),(0,s.kt)("p",null,"The data comes from a region of chromosome 19 including the genes ",(0,s.kt)("em",{parentName:"p"},"GRIN2D")," (which is associated with a number of ",(0,s.kt)("a",{parentName:"p",href:"https://www.ncbi.nlm.nih.gov/books/NBK582335/"},"neurodevelopmental disorders"),") and ",(0,s.kt)("em",{parentName:"p"},"FUT2")," (which encodes ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Secretor_status"},"secretor status"),")."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If you want to see how this data was generated - see the ",(0,s.kt)("a",{parentName:"p",href:"/chg-training-resources/sequence_data_analysis/variant_calling_and_imputation/"},"Variant calling and imputation practical"),"."))),(0,s.kt)("p",null,"##\xa0Plotting the haplotypes"),(0,s.kt)("p",null,"Let's plot this data now.  To start, let's turn the genotypes themselves into a matrix.\nIf you look at the data you'll see the first four columns are variant metadata, so let's get the rest:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"metadata = gwd[,1:4]\nGT = as.matrix( gwd[,5:ncol(gwd)])\n")),(0,s.kt)("p",null,"To plot haplotypes, the first thing we'll do is throw out monomorphic and rare variants.  (These don't look great on haplotype plots because almost everybody carries the same allele!)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"frequencies = rowSums(GT) / ncol(GT)\nw = which( frequencies > 0 & frequencies < 1 )\nGT = GT[w,]\nmetadata = metadata[w,]\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"How many variants are left?"))),(0,s.kt)("p",null,"Let's get the number of SNPs and haplotypes in the data:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"L = nrow(GT) # number of SNPs\nN = ncol(GT) # number of haplotypes\n")),(0,s.kt)("p",null,"and plot:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'image(\n    GT,\n    x = 1:L,\n    y = 1:N,\n    xlab = "SNPs",\n    ylab = "Chromosomes"\n)\n')),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"img",src:a(81972).Z,width:"2348",height:"866"})),(0,s.kt)("p",null,"Cool!  "),(0,s.kt)("h2",{id:"improving-the-plot"},"Improving the plot"),(0,s.kt)("p",null,"There are three ways we could improve it - we'll try two of these in this tutorial."),(0,s.kt)("p",null,"First, we could order the haplotypes (i.e. grouping similar haplotypes) which will help to bring out the 'haplotype structure'.  We'll do this in ",(0,s.kt)("a",{parentName:"p",href:"#ordering-the-haplotypes"},"a moment"),"."),(0,s.kt)("p",null,"Second, instead of plotting reference and non-reference alleles, it would be nice to plot ancestral and non-ancestral (i.e. 'derived') alleles.  Then we'd be looking at mutations directly.  (We'll skip this for now., although ",(0,s.kt)("a",{parentName:"p",href:"https://ftp.1000genomes.ebi.ac.uk/vol1/ftp/pilot_data/technical/reference/ancestral_alignments/"},"ancestral allele calls are available"),", so it's possible in principle.)"),(0,s.kt)("p",null,"The third thing it would be nice to do is plot the variants on reference sequence coordinates, with genes on there..."),(0,s.kt)("h2",{id:"plotting-genes"},"Plotting genes"),(0,s.kt)("p",null,"Let's try to plot with genes now.  First we need to load the genes."),(0,s.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Warning")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"This section is somewhat ",(0,s.kt)("strong",{parentName:"p"},"experimental"),".  See how it goes and please let me know if you run into issues."))),(0,s.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Note 1")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The data in this tutorial is in ",(0,s.kt)("strong",{parentName:"p"},"build 37")," coordinates.  So you will need to get the ",(0,s.kt)("a",{parentName:"p",href:"https://www.gencodegenes.org/human/release_47lift37.html"},"build 37 version")," of the gencode files for this.  Download the b37 version of the gff file now, for example by:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},"curl -O https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_47/GRCh37_mapping/gencode.v47lift37.annotation.gff3.gz\n")),(0,s.kt)("p",{parentName:"div"},"and remember where it is saved."))),(0,s.kt)("p",null,"Now load the genes into R:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'genes = gmsgff::read_gff( "/path/to/gencode.v47lift37.annotation.gff3.gz", extra_attributes = c( "gene_name", "gene_type" ) )\n')),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note 2")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"To load the data like this, you will also have to have the ",(0,s.kt)("inlineCode",{parentName:"p"},"read_gff()")," function.  You may have\n",(0,s.kt)("a",{parentName:"p",href:"https://chg-training.github.io/chg-training-resources/bioinformatics/programming_with_gene_annotations3/"},"written your own"),",\nbut if not you can install my version from the ",(0,s.kt)("inlineCode",{parentName:"p"},"gmsgff"),"package.  To install that now, try:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},'install.packages(\n    "https://www.chg.ox.ac.uk/bioinformatics/training/gms/code/R/gmsgff.tgz",\n    repos = NULL,\n    type = "source"\n)\n')))),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note 3")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Plotting genes from gff is also nontrivial so I've written a function to do it - find it in ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/chg-training/chg-training-resources/blob/main/docs/population_genetics/plotting_haplotypes/code/plot_gff.R"},"this file"),".  If you download that file, you can either paste it into your R session or load it using ",(0,s.kt)("inlineCode",{parentName:"p"},"source()"),":"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-r"},"source( 'plot_gff.R')\n")))),(0,s.kt)("p",null,"Great - now let's try making a multi-panel plot with the haplotypes on top and the genes underneath. Because the haplotypes are plotted in\nSNP index positions, we'll also need some join-y segments to show us where they are. For customised plots like this, you\nusually need to go low level.  This tutorial uses base R graphics to do this, but the techniques should apply to other\nsystems as well."),(0,s.kt)("p",null,"This is  graphics so I'm going to make a layout for the plot - with the genes below the sequences.\nThis will be a multi-panel plot, which takes a bit of care.\nI've found the best way to do control multi-panel plots is to"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"get rid of the built-in plot margins, and"),(0,s.kt)("li",{parentName:"ol"},"Instead control the margins as rows in the layout of panels.")),(0,s.kt)("p",null,"In R we can do that by creating a plot layout matrix with ",(0,s.kt)("inlineCode",{parentName:"p"},"0"),"'s in the rows and columns that are not plotted in.\nThese will form the actual margins and we'll control their widths and heights as we choose.  Let's try now:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"# First remove R's built-in plot margins...\npar( mar = c( 0, 0, 0, 0 ))\n\n# ...and then generate a multi-panel layout matrix\nlayout.matrix = matrix(\n    c(\n        0, 0, 0, # top margin\n        0, 1, 0, # haplotypes\n        0, 0, 0,\n        0, 2, 0, # linking lines\n        0, 0, 0,\n        0, 3, 0, # genes\n        0, 0, 0  # bottom margin\n    ),\n    byrow = T,\n    ncol = 3\n)\nprint( layout.m )\n")),(0,s.kt)("p",null,"The layout() function now creates a multi-panel figure:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"layout(\n    layout.matrix,\n    widths = c( 0.1, 1, 0.1 ),\n    heights = c( 0.1, 1, 0.1, 0.5, 0.1 )\n)\n")),(0,s.kt)("p",null,"Having set up the layout, we now plot the panels in the order they were numbered in the layout:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'# Plot 1: the haplotypes\nimage(\n    GT,\n    x = 1:L,\n    y = 1:N,\n    xlab = "SNPs",\n    ylab = "Chromosomes"\n)\n')),(0,s.kt)("p",null,"For the middle panel, let's make a blank plot, and then put some line segments on. I like three-segmented line segments\nhere, so that's what I'll do.  (This uses a ",(0,s.kt)("inlineCode",{parentName:"p"},"blank.plot()")," function which makes a blank plot pane - it's in the\n",(0,s.kt)("inlineCode",{parentName:"p"},"plot_gff.R")," code as well.)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"# Plot 2: the joining segments\nxlim = range( metadata$position )\nblank.plot( xlim = xlim, ylim = c( 0, 1 ), xaxs = 'i' )\n\n# Locations of where the SNPs will be, in physical coords and in the haplotypes\nphysical.pos = metadata$position\nhaplotype.pos = seq( from = xlim[1], to = xlim[2], length = nrow( metadata ))\n\n# Vertical locations of the segment joins\nys = c( 0, 0.25, 0.75, 1 )\n\nsegments(\n    x0 = physical.pos, x1 = physical.pos,\n    y0 = ys[1], y1 = ys[2]\n)\nsegments(\n    x0 = physical.pos, x1 = haplotype.pos,\n    y0 = ys[2], y1 = ys[3]\n)\nsegments(\n    x0 = haplotype.pos, x1 = haplotype.pos,\n    y0 = ys[3], y1 = ys[4]\n)\n")),(0,s.kt)("p",null,"Finally for the last panel we'll plot the genes:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'# Plot 3: the genes\nplot_gff(\n    genes %>% filter( end >= xlim[1] & start <= xlim[2] & type %in% c( "gene", "transcript", "exon", "CDS" )),\n    region = list( chromosome = \'chr19\', start = min(metadata$position), end = max( metadata$position ))\n)\n')),(0,s.kt)("p",null,"Phew!  That's quite a bit to type so I've put that all together, with some extra tweaks, into a function which you can find ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/chg-training/chg-training-resources/blob/main/docs/population_genetics/plotting_haplotypes/code/plot_haplotypes.R"},"here"),".  Download that file, source it by typing..."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"source( 'plot_haplotypes.R' )\n")),(0,s.kt)("p",null,"...and let's try it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"region = list(\n    chromosome = 'chr19',\n    start = 48146028,\n    end = 49255722\n)\nplot_haplotypes(\n    GT,\n    metadata,\n    genes,\n    region = region\n)\n")),(0,s.kt)("p",null,"Let's also zoom in a bit to see the haplotypes around ",(0,s.kt)("em",{parentName:"p"},"GRIN2D"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"FUT2.region = list(\n    chromosome = 'chr19',\n    start = 49199228 - 50000,\n    end = 49209208 + 50000\n)\nplot_haplotypes(\n    GT,\n    metadata,\n    genes,\n    region = FUT2.region\n)\n")),(0,s.kt)("p",null,"...or a slightly larger region around *GRIN2D**:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GRIN2D.region = list(\n    chromosome = 'chr19',\n    start = 48896925 - 100000,\n    end = 48948188 + 100000\n)\nplot_haplotypes(\n    GT,\n    metadata,\n    genes,\n    region = GRIN2D.region\n)\n")),(0,s.kt)("p",null,"Very ",(0,s.kt)("a",{parentName:"p",href:"https://doi.org/10.1038/nature04226"},"hapmap-esque"),"!."),(0,s.kt)("h2",{id:"ordering-the-haplotypes"},"Ordering the haplotypes"),(0,s.kt)("p",null,"Haplotypes plotted like that look very noisy - and not surprisingly, since the individuals are essentially in random order."),(0,s.kt)("p",null,"To try to make sense of them, let's use a simple approach to order the haplotypes in the region -  ",(0,s.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Hierarchical_clustering"},"hierarchical clustering"),"."),(0,s.kt)("p",null,"In R we can do this by first constructing a ",(0,s.kt)("strong",{parentName:"p"},"distance matrix")," and then using ",(0,s.kt)("inlineCode",{parentName:"p"},"hclust()")," to cluster it.  Let's try now - we'll cluster by SNPs near the FUT2 gene:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'wNearGRIN2D = which( metadata$position >= GRIN2D.region$start & metadata$position <= GRIN2D.region$end )\ndistance = dist(\n    t(GT[wNearGRIN2D,]),\n    method = "manhattan"\n)\n')),(0,s.kt)("p",null,"Here we've used 'manhattan' distance, that is, the distance between two haplotypes is the number of mutational\ndifferences between them."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The ",(0,s.kt)("inlineCode",{parentName:"p"},"t()")," part is needed around GT, otherwise we will be clustering SNPs instead of samples.  (You'll know if you got\nthis wrong because the output will be enormous below."))),(0,s.kt)("p",null,"You can see what the distance matrix looks like by converting to a matrix:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"as.matrix(distance)[1:10,1:10]\n")),(0,s.kt)("p",null,"You should see something like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"             HG02461_hap1 HG02461_hap2 HG02462_hap1 HG02462_hap2 HG02464_hap1 HG02464_hap2 HG02465_hap1 HG02465_hap2 HG02561_hap1 HG02561_hap2\nHG02461_hap1            0         1360         1894         1832         1775         1466         1977         1648         1797         2120\nHG02461_hap2         1360            0         2062         1542         1753         1464         1729         1972         1765         1878\nHG02462_hap1         1894         2062            0         1668         1599         1886         1615         1878         1737         1872\nHG02462_hap2         1832         1542         1668            0         2003         1956         1785         1742         1717         2012\nHG02464_hap1         1775         1753         1599         2003            0         1883         1876         1791         1946         2055\nHG02464_hap2         1466         1464         1886         1956         1883            0         1895         1788         1679         1656\nHG02465_hap1         1977         1729         1615         1785         1876         1895            0         2137         1838         1845\nHG02465_hap2         1648         1972         1878         1742         1791         1788         2137            0         1725         2126\nHG02561_hap1         1797         1765         1737         1717         1946         1679         1838         1725            0         1935\nHG02561_hap2         2120         1878         1872         2012         2055         1656         1845         2126         1935            0\n")),(0,s.kt)("p",null,"Now let's cluster and order them using ",(0,s.kt)("inlineCode",{parentName:"p"},"hclust()"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"sample_order = hclust( distance )$order\n")),(0,s.kt)("p",null,"Let's plot again - this time ordering the columns (haplotypes) in the data:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"plot_haplotypes(\n    GT[,sample_order],\n    metadata,\n    genes,\n    region = GRIN2D.region\n)\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Wouldn't it be better to put that sorting code into a function?  It would!"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-r"},'order_haplotypes <- function( haplotypes, metadata, region ) {\n    wInRegion = which( metadata$position >= region$start & metadata$position <= region$end )\n    distance = dist(\n        t(haplotypes[wInRegion,]),\n        method = "manhattan"\n    )\n    return( hclust( distance )$order )\n}\n\n')),(0,s.kt)("p",{parentName:"div"},"Feel free to explore other regions within the data."),(0,s.kt)("h2",{parentName:"div",id:"the-frequency-of-variants"},"The frequency of variants"),(0,s.kt)("p",{parentName:"div"},"How much variation is there?  Here are a few ways to look at it."),(0,s.kt)("p",{parentName:"div"},"First we could look at the frequencies of all the variants in the data:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre",className:"language-r"},'par( mfrow = c( 1, 1 ), mar = c( 4.1, 4.1, 4.1, 4.1 ))\nfrequencies = rowSums( GT ) / ncol( GT )\nhist(\n    frequencies,\n    breaks = 25,\n    xlab = "Alt allele frequency",\n    ylab = "Count",\n    main = "Site frequency spectrum"\n)\n')),(0,s.kt)("p",{parentName:"div"},(0,s.kt)("img",{alt:"img",src:a(23935).Z,width:"1444",height:"1074"})),(0,s.kt)("p",{parentName:"div"},"This picture is typical - ",(0,s.kt)("strong",{parentName:"p"},"most variant alleles are rare"),", and only a few are common."))),(0,s.kt)("p",null,"These are the frequencies at ",(0,s.kt)("strong",{parentName:"p"},"variable sites")," only.  If we computed at every site, there would be an even bigger spike\nat zero - counting all the sites that are not variable between people in our data. (How many of these are there in this\nregion?)"),(0,s.kt)("p",null,":::"),(0,s.kt)("p",null,"This picture is for ",(0,s.kt)("em",{parentName:"p"},"alternate")," alleles (versus reference alleles).  A better plot would show the frequencies of\n",(0,s.kt)("strong",{parentName:"p"},"derived")," alleles (i.e. those that have arisen trhough mutation compared to the common ancestor).  To do that, we\nwould need a call of the ancestral allele - which we haven't loaded right now.  So instead let's plot hte ",(0,s.kt)("strong",{parentName:"p"},"folded site frequency spectrum"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'hist(\n    pmin( frequencies, 1 - frequencies ),\n    breaks = 25,\n    xlab = "Minor allele frequency",\n    ylab = "Count",\n    main = "Folded site frequency spectrum"\n)\n\n')),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"img",src:a(15413).Z,width:"1478",height:"1128"})),(0,s.kt)("h2",{id:"computing-diversity"},"Computing diversity"),(0,s.kt)("p",null,"Another natural metric is to measure 'how much variation' there is by computing the average evolutionary distances between haplotypes. The simplest way is just to count the number of mutations that differ between each pair of haplotypes, on average across pairs."),(0,s.kt)("p",null,"The idea is that (ignoring recombination for a moment) - mutations that seperate two samples represent those that have occurred since their most recent common ancestor.  Roughtly speaking the number of mutations 'counts' the evolutionary distance between the haplotypes.  A natural metric is thus ",(0,s.kt)("strong",{parentName:"p"},"number of pairwise differences")," between the two haplotypes."),(0,s.kt)("p",null,"Let's see how distantly related the haplotypes are on average, by computing the  ",(0,s.kt)("strong",{parentName:"p"},"average number of pairwise\ndifferences")," between different haplotypes - also known as ",(0,s.kt)("strong",{parentName:"p"},"nucleotide diversity")," - now. To do this we'll write a\nfunction which loops over all pairs of haplotypes in the data."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"How many pairs of distinct haplotypes are there?  The answer is of course the number of ways of drawing two things from ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"N")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"N")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N")))))," things - known as '",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"N")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"N")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N")))))," choose 2':"),(0,s.kt)("div",{parentName:"div",className:"math math-display"},(0,s.kt)("span",{parentName:"div",className:"katex-display"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mspace",{parentName:"mrow",width:"1em"}),(0,s.kt)("mtext",{parentName:"mrow"},"choose"),(0,s.kt)("mspace",{parentName:"mrow",width:"1em"}),(0,s.kt)("mn",{parentName:"mrow"},"2"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mrow",{parentName:"mfrac"},(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mo",{parentName:"mrow"},"\u22c5"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"N"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,s.kt)("mn",{parentName:"mfrac"},"2")),(0,s.kt)("mspace",{parentName:"mrow",linebreak:"newline"})),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"N\\quad\\text{choose}\\quad2 = \\frac{N\\cdot(N-1)}{2} \\\\")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"1em"}}),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"choose")),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"1em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"2"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"2.113em",verticalAlign:"-0.686em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,s.kt)("span",{parentName:"span",className:"mfrac"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.427em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.314em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"2"))),(0,s.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,s.kt)("span",{parentName:"span",style:{top:"-3.677em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u22c5"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.686em"}},(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))),(0,s.kt)("span",{parentName:"span",className:"mspace newline"}))))),(0,s.kt)("p",{parentName:"div"},"...also known as the 2nd diagonal in pascal's triangle:"),(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},"N\n0           1\n1         1   1   \u2199\n2       1   2   1\n3     1   3   3   1\n4   1   4   6   4   1\n          etc.\n")),(0,s.kt)("p",{parentName:"div"},"In R, you can  compute this using the ",(0,s.kt)("inlineCode",{parentName:"p"},"choose()")," function - or just do ",(0,s.kt)("inlineCode",{parentName:"p"},"N*(N-1)/2")," as above, which is what I've done in\nthe function below."))),(0,s.kt)("p",null,"and so on.  "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},"average_number_of_pairwise_differences = function(\n    haplotypes\n) {\n    N = ncol(haplotypes)\n    total = 0\n    # Sum over all pairs\n    # There are of course much faster ways to do this!\n    for( i in 1:(N-1) ) {\n        for( j in (i+1):N ) {\n            a = haplotypes[,i]\n            b = haplotypes[,j]\n            total = total + sum( a != b )\n        }\n    }\n    # Divide by the total number of pairs\n    return( total / (N*(N-1)/2))\n}\n\naverage_number_of_pairwise_differences( GT )\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"1811.239\n")),(0,s.kt)("p",null,"So haplotypes differ by about 1800 mutations on average, across this 1.1Mb region - or about 1.6 mutations per kilobase."),(0,s.kt)("h2",{id:"challenge-questions"},"Challenge questions"),(0,s.kt)("p",null,"Here are some challenges:"),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge 1")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Pick other genes in the region and make a version of the haplotype plot that shows all haplotypes, but the ordering is\nbased only on the SNPs in the gene, or a small region around it."))),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge 2")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Do haplotypes carrying the alternate allele at the SNP ",(0,s.kt)("inlineCode",{parentName:"p"},"rs601338")," (at ",(0,s.kt)("inlineCode",{parentName:"p"},"chr19:49206674")," in ",(0,s.kt)("em",{parentName:"p"},"FUT2"),"), which determines secretor\nstatus, look different from those that don't?  Try plotting just the haplotypes carrying each allele."))),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge 3")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Plot an ",(0,s.kt)("strong",{parentName:"p"},"LD matrix")," (i.e. a matrix of pairwise correlations between different variants).\nCan you see the block-like structure?"))),(0,s.kt)("p",null,"Good luck!"))}h.isMDXComponent=!0},15413:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/folded_sfs-30031c7ab74c884faa452c242b8fc521.png"},81972:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/haplotypes-42bc805ffcffa8aa8c7d53ba9e5a0b35.png"},23935:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/sfs-0ae849c4ee9c2e24c07e2574538297ff.png"}}]);