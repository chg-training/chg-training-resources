"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[3112],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,p=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),c=l(a),d=s,h=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return a?n.createElement(h,o(o({ref:t},m),{},{components:a})):n.createElement(h,o({ref:t},m))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,o=new Array(i);o[0]=d;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r[c]="string"==typeof e?e:s,o[1]=r;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},88457:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var n=a(87462),s=(a(67294),a(3905));const i={sidebar_position:7},o="Part 3: Running a simple regression analysis",r={unversionedId:"genome_wide_association_studies/quantitative_trait_gwas/testing_for_association",id:"genome_wide_association_studies/quantitative_trait_gwas/testing_for_association",title:"Part 3: Running a simple regression analysis",description:"Now that you have a good idea of what your data looks like, we are going to run a basic linear regression using filtered",source:"@site/docs/genome_wide_association_studies/quantitative_trait_gwas/testing_for_association.md",sourceDirName:"genome_wide_association_studies/quantitative_trait_gwas",slug:"/genome_wide_association_studies/quantitative_trait_gwas/testing_for_association",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/testing_for_association",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/genome_wide_association_studies/quantitative_trait_gwas/testing_for_association.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"sidebar8",previous:{title:"Part 2: Transforming the phenotype data",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/phenotype_qc"},next:{title:"Part 4: Working with population substructure and multi-ethnic populations",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/population_structure"}},p={},l=[{value:"Testing for association",id:"testing-for-association",level:2},{value:"Association outputs",id:"association-outputs",level:3},{value:"Visualising results - Manhattan and Q-Q plots",id:"visualising-results---manhattan-and-q-q-plots",level:2}],m={toc:l},c="wrapper";function u(e){let{components:t,...a}=e;return(0,s.kt)(c,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"part-3-running-a-simple-regression-analysis"},"Part 3: Running a simple regression analysis"),(0,s.kt)("p",null,"Now that you have a good idea of what your data looks like, we are going to run a basic linear regression using filtered\ndatasets and transformed phenotype data. We will first run the regression using our ",(0,s.kt)("a",{parentName:"p",href:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/qc_genotypes"},"filtered genotype\ndata")," and the ",(0,s.kt)("a",{parentName:"p",href:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/phenotype_qc"},"inverse normal transformed phenotype"),"."),(0,s.kt)("h2",{id:"testing-for-association"},"Testing for association"),(0,s.kt)("p",null,"To run the association analysis, you can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"--assoc`` flag in "),"plink` as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"./plink \\\n--allow-no-sex \\\n--assoc \\\n--bfile Genotype_data/AMR_genotypes.filtered \\\n--out output/AMR_genotypes.filtered \\\n--pheno Phenotype_data/AMR_phenotype.INT_transformed.txt \\\n--pheno-name Noro_response_INT\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The flag ",(0,s.kt)("inlineCode",{parentName:"p"},"--pheno_name")," is used to indicate a named phenotype column in the phenotype file. This means that you can\nstore multiple phenotypes (or different phenotype transformations) in the same file."),(0,s.kt)("p",{parentName:"div"},"As a comparison, try running the same analysis with the original (untransformed) phenotype instead.  (Make sure and change the output filename!)"))),(0,s.kt)("h3",{id:"association-outputs"},"Association outputs"),(0,s.kt)("p",null,"The results from the association will be saved in a ",(0,s.kt)("inlineCode",{parentName:"p"},".qassoc")," file.  Take a look at this now.  It should look something\nlike this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"}," CHR                       SNP         BP    NMISS       BETA         SE         R2        T            P \n  19   rs78961563:46700390:C:T   46700390     2000   -0.05664    0.05271  0.0005774   -1.074       0.2828 \n  19    rs4803905:46703457:G:A   46703457     2000    0.01597    0.06769  2.785e-05   0.2359       0.8135 \n  19  rs117336132:46703639:C:T   46703639     2000   -0.06151    0.06275  0.0004807  -0.9802       0.3271 \n  19    rs2079936:46708462:A:G   46708462     2000  -0.005367      0.034  1.247e-05  -0.1579       0.8746 \n  19    rs8113677:46709129:C:A   46709129     2000    0.06046    0.03214   0.001768    1.881      0.06009 \n  19   rs11881956:46712439:T:C   46712439     2000   -0.05139    0.04454   0.000666   -1.154       0.2487 \n")),(0,s.kt)("h2",{id:"visualising-results---manhattan-and-q-q-plots"},"Visualising results - Manhattan and Q-Q plots"),(0,s.kt)("p",null,"There are two plots you should immediately make of your GWAS output."),(0,s.kt)("p",null,"First - make a ",(0,s.kt)("strong",{parentName:"p"},"manhattan plot"),", which summarises the association evidence (in the form of the ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mrow",{parentName:"msub"},(0,s.kt)("mi",{parentName:"mrow"},"log"),(0,s.kt)("mo",{parentName:"mrow"},"\u2061")),(0,s.kt)("mn",{parentName:"msub"},"10")),(0,s.kt)("mtext",{parentName:"mrow"},"P-value")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"-\\log_{10} \\text{P-value}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.9386em",verticalAlign:"-0.2441em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mop"},(0,s.kt)("span",{parentName:"span",className:"mop"},"lo",(0,s.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.207em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.4559em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"10"))))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.2441em"}},(0,s.kt)("span",{parentName:"span"})))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"P-value")))))),") across all genomic positions in the data.  And second, make a ",(0,s.kt)("strong",{parentName:"p"},"quantile-quantile plot"),", which compares the observed P-values, to what would be expected if there were no true signals (and no confounding!)."),(0,s.kt)("p",null,"An easy way is to use the ",(0,s.kt)("inlineCode",{parentName:"p"},"qqman")," package in R to do this (you'll need to install this first):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-r"},'library(qqman)\n\noptions(scipen=999) # removes scientific notation from plot printout\n\n# Read in summary stats from PLINK\ndata <- readr::read_table( "output/AMR_genotypes.filtered.qassoc" )\n\nmanhattan <- function( data ) {\n    plot(\n        data$BP,\n        -log10( data$P ),\n        pch = 19, # use filled circles\n        bty = \'n\',\n        xlab = "Position on chromosome 19",\n        ylab = ""\n    )\n    # This funny bit of code puts a horizontal Y axis label on\n    mtext( "-log10 P", side = 2, line = 2, las = 1 )\n}\n\nqqplot <- function( observed_pvalues ) {\n    observed_pvalues = sort( observed_pvalues )\n    N = length(observed_pvalues)\n    expected_pvalues = 1:N/(N+1)\n    plot(\n        pmin( -log10(expected_pvalues), 8 ),\n        pmin( -log10(observed_pvalues), 8 ),\n        pch = 19,  # filled circles...\n        cex = 0.5, # ...but make them smaller\n        xlab = "expected -log10 P",\n        ylab = ""\n    )\n    # This funny bit of code puts a horizontal Y axis label on\n    mtext( "Observed\\n-log10 P", side = 2, line = 2, las = 1 )\n    abline( a = 0, b = 1, col = \'red\' )\n}\n\n\n# Set file name for plots\npng( file = "output/AMR.Norovirus_response.transformed.manhattan_qq.png", width=1024, height=512 )\n\n# Let\'s put both plots in one image.\n# The manhattan is wider than the q-q plot, so we\'ll make an appropariate layout\nlayout(\n    matrix(\n        c(\n            1, 1,\n            2, 0\n        ),\n        byrow =T,\n        ncol = 2\n    )\n)\n# and expand the left margin:\npar( mar = c( 4.1, 7.1, 4.1, 4.1 ))\n\n# Generate the manhattan plot\nmanhattan( data )\nqqplot( data$P )\n\ndev.off()\n\n')),(0,s.kt)("p",null,"Hey, it looks like we have a signal!"),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Questions")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},"What does the Q-Q plot tell us about our associations?"),(0,s.kt)("li",{parentName:"ul"},"How might QC of our data change the observed signals?")))))}u.isMDXComponent=!0}}]);