"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[5163],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(a),u=o,h=d["".concat(l,".").concat(u)]||d[u]||c[u]||i;return a?n.createElement(h,r(r({ref:t},m),{},{components:a})):n.createElement(h,r({ref:t},m))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,r[1]=s;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},72360:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(67294),o=a(86010);const i={tabItem:"tabItem_OmH5"};function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(i.tabItem,r),hidden:a},t)}},9877:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(87462),o=a(67294),i=a(72389),r=a(67392),s=a(7094),l=a(12466),p=a(86010);const m={tabList:"tabList_uSqn",tabItem:"tabItem_LplD"};function d(e){const{lazy:t,block:a,defaultValue:i,values:d,groupId:c,className:u}=e,h=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),k=(0,r.l)(g,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===i?i:i??h.find((e=>e.props.default))?.props.value??h[0]?.props.value;if(null!==N&&!g.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:f}=(0,s.U)(),[w,b]=(0,o.useState)(N),y=[],{blockElementScrollPositionUntilNextRender:_}=(0,l.o5)();if(null!=c){const e=v[c];null!=e&&e!==w&&g.some((t=>t.value===e))&&b(e)}const C=e=>{const t=e.currentTarget,a=y.indexOf(t),n=g[a].value;n!==w&&(_(t),b(n),null!=c&&f(c,n))},x=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=y.indexOf(e.currentTarget)+1;t=y[a]||y[0];break}case"ArrowLeft":{const a=y.indexOf(e.currentTarget)-1;t=y[a]||y[y.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,p.Z)("tabs-container",m.tabList)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":a},u)},g.map((e=>{let{value:t,label:a,attributes:i}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>y.push(e),onKeyDown:x,onFocus:C,onClick:C},i,{className:(0,p.Z)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,o.cloneElement)(h.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function c(e){const t=(0,i.Z)();return o.createElement(d,(0,n.Z)({key:String(t)},e))}},15691:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var n=a(87462),o=(a(67294),a(3905)),i=a(9877),r=a(72360);const s={sidebar_position:100},l="Estimating allele frequencies",p={unversionedId:"statistical_modelling/introduction/allele_frequencies",id:"statistical_modelling/introduction/allele_frequencies",title:"Estimating allele frequencies",description:"Let's use Bayes to estimate allele frequencies - quantifying our uncertainty - for a couple of important",source:"@site/docs/statistical_modelling/introduction/allele_frequencies.md",sourceDirName:"statistical_modelling/introduction",slug:"/statistical_modelling/introduction/allele_frequencies",permalink:"/chg-training-resources/statistical_modelling/introduction/allele_frequencies",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/statistical_modelling/introduction/allele_frequencies.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100},sidebar:"sidebar6",previous:{title:"The bayesian update",permalink:"/chg-training-resources/statistical_modelling/introduction/bayesian_update"},next:{title:"A bayesian forest plot",permalink:"/chg-training-resources/statistical_modelling/introduction/allele_frequencies_2"}},m={},d=[{value:"Plotting the posterior",id:"plotting-the-posterior",level:2},{value:"Plotting multiple populations",id:"plotting-multiple-populations",level:2},{value:"Ordering populations",id:"ordering-populations",level:2},{value:"Bayesian shrinkage",id:"bayesian-shrinkage",level:2}],c={toc:d},u="wrapper";function h(e){let{components:t,...s}=e;return(0,o.kt)(u,(0,n.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"estimating-allele-frequencies"},"Estimating allele frequencies"),(0,o.kt)("p",null,"Let's use ",(0,o.kt)("a",{parentName:"p",href:"/chg-training-resources/statistical_modelling/introduction/bayes"},"Bayes")," to estimate allele frequencies - quantifying our uncertainty - for a couple of important\nvariants in global populations.  Here are the datasets:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Data on the O blood group variant (rs8176719): ",(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/chg-training/chg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_o_blood_group_grouped.tsv"},"O blood group data"))),(0,o.kt)("p",null,"rs8176719 has two alleles - the functional 'C' allele, and a deletion allele that results in a\n",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Frameshift_mutation"},"frameshift"),".  Individuals that have two copies of the deletion have\n'O' blood group."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Data on ",(0,o.kt)("strong",{parentName:"li"},"rs61028892"),", a variant that has been associated with ",(0,o.kt)("a",{parentName:"li",href:"https://www.medrxiv.org/content/10.1101/2023.05.16.23289851v1.full"},"control of fetal\nhaemoglobin")," in individuals with sickle cell\ndisease: ",(0,o.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/chg-training/chg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_rs61028892_grouped.tsv"},"rs61028892 data"))),(0,o.kt)("p",null,"Both datasets above come from the ",(0,o.kt)("a",{parentName:"p",href:"https://www.internationalgenome.org/data-portal/data-collection/phase-3"},"1000 Genomes Project Phase 3\ndataset"),"."),(0,o.kt)("p",null,"You should be able to load these into R like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'library( tidyverse )\ndata = readr::read_tsv(\n    "https://raw.githubusercontent.com/chg-training/chg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_o_blood_group_grouped.tsv"\n)\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Load one or both of these datasets into R using ",(0,o.kt)("inlineCode",{parentName:"p"},"read_tsv()"),".  Then  use ",(0,o.kt)("inlineCode",{parentName:"p"},"dbeta()")," to plot the posterior distribution of\nthe allele frequency and/or the O blood group frequency across all populations and then in individual populations."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Hint.")," ",(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," is one good way to do this.  Some further tips on this are below."))),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Add the posterior mean and lower and upper values forming a 95% credible set to the data frame."),(0,o.kt)("p",{parentName:"div"},"Add 95% credible intervals for each population to the data frame, using ",(0,o.kt)("inlineCode",{parentName:"p"},"qbeta()"),", and then plot these as the estimates\n(points) and 95% confidence intervals"))),(0,o.kt)("h2",{id:"plotting-the-posterior"},"Plotting the posterior"),(0,o.kt)("p",null,"To get ",(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," to plot a posterior density for the whole dataset, or for individual populations, is not conceptually difficult - we're just plotting the beta distribution after all.  But it does require a bit of complexity in terms of code. In short, ",(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," takes a single data frame as data, so you have to build a big dataframe that represents the posterior density at a grid of x axis values, for each population you want to plot."),(0,o.kt)("p",null,"Here's one way that is fairly re-useable.  Let's write a function that reads in one row of data and generates the dataframe we need.  Rather than hard-code this for the O blood group example, we'll make it work with generic counts ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("msub",{parentName:"mrow"},(0,o.kt)("mi",{parentName:"msub"},"n"),(0,o.kt)("mn",{parentName:"msub"},"1"))),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n_1")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,o.kt)("span",{parentName:"span",className:"mord"},(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,o.kt)("span",{parentName:"span",className:"msupsub"},(0,o.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,o.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,o.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,o.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,o.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,o.kt)("span",{parentName:"span"}))))))))))," and ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("msub",{parentName:"mrow"},(0,o.kt)("mi",{parentName:"msub"},"n"),(0,o.kt)("mn",{parentName:"msub"},"2"))),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n_2")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,o.kt)("span",{parentName:"span",className:"mord"},(0,o.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,o.kt)("span",{parentName:"span",className:"msupsub"},(0,o.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,o.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,o.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,o.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,o.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,o.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,o.kt)("span",{parentName:"span",className:"vlist-r"},(0,o.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,o.kt)("span",{parentName:"span"}))))))))))," (which we can set to the counts of the non-O and O blood group genotypes):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"compute_posterior_density = function(\n    nA, nB,\n    at = seq( from = 0, to = 1, by = 0.01 ),\n    prior = c( nA = 0, nB = 0 )\n) {\n    # I'm using tidyverse's version of a dataframe, called 'tibble':\n    tibble::tibble(\n        nA = nA,\n        nB = nB,\n        at = at, \n        # Compute the posterior using `dbeta()`\n        posterior = dbeta(\n            at,\n            shape1 = nB + prior['nB'] + 1,\n            shape2 = nA + prior['nA'] + 1\n        )\n    )\n}\n")),(0,o.kt)("p",null,"For example, for the O blood group data you could apply this to the whole dataset like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'data = readr::read_tsv(\n    "https://raw.githubusercontent.com/chg-training/chg-training-resources/main/docs/statistical_modelling/introduction/data/1000_genomes_o_blood_group_grouped.tsv"\n)\n\nprint( data )\n\noverall_posterior = compute_posterior_density(\n    nA = sum(data$`C/C` + data$`-/C` ),\n    nB = sum(data$`-/-`),\n    at = seq( from = 0, to = 1, by = 0.001 )\n)\n')),(0,o.kt)("p",null,"If you print this, you should see a data frame with 101 rows (one for each of those ",(0,o.kt)("inlineCode",{parentName:"p"},"at")," values) showing the posterior distribution."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Make sure you understand what that data frame is showing.  To recap, it's the ",(0,o.kt)("em",{parentName:"p"},"posterior distribution of the frequency of O blood group across all populations"),", evaluated at a grid of 101 points between zero and one."),(0,o.kt)("p",{parentName:"div"},"The posterior is a ",(0,o.kt)("a",{parentName:"p",href:"/chg-training-resources/statistical_modelling/introduction/some_distributions"},"beta distribution")," so we used ",(0,o.kt)("inlineCode",{parentName:"p"},"dbeta()")," to compute it."))),(0,o.kt)("p",null,"Want to plot it?  No problem!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"p = (\n    ggplot(\n        data = overall_posterior,\n        aes( x = at, y = posterior )\n    )\n    + geom_line()\n)\nprint(p)\n")),(0,o.kt)("p",null,"Ok that's not good enough.  Let's zoom in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"print( p + xlim( 0.35, 0.55 ) )\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Challenge")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Ok that's not good enough either.  Here are some things you should do to fix it."),(0,o.kt)("ol",{parentName:"div"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Does your plot look kind of jagged-y?  Why?  Go back and fix it now!")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"You ought to give your plots meaningful x axis and y axis labels"),".  (Otherwise you'll just waste people's time making them ask what they are).  The ",(0,o.kt)("inlineCode",{parentName:"p"},"xlab()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ylab()")," functions can be used for this - add some now.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Adding ",(0,o.kt)("inlineCode",{parentName:"p"},"+ theme_minimal()")," will get rid of the grey background, for a cleanrer plot.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Personally, I never like the way the y axis label is printed at 90 degrees to the reading direction - do you?  That can\nbe fixed too with a bit of ggplot magic. I always have to ",(0,o.kt)("a",{parentName:"p",href:"https://ggplot2.tidyverse.org"},"look this up in the\ndocumentation")," so here it is for reference:"))),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-r"},"print(\n    p\n    + theme_minimal(16)\n    + theme(\n        axis.title.y = element_text( angle = 0, vjust = 0.5 )\n    )\n)\n")),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"Challenge")," Put all this together to make a final plot of the posterior distribution, centred near ",(0,o.kt)("span",{parentName:"p",className:"math math-inline"},(0,o.kt)("span",{parentName:"span",className:"katex"},(0,o.kt)("span",{parentName:"span",className:"katex-mathml"},(0,o.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,o.kt)("semantics",{parentName:"math"},(0,o.kt)("mrow",{parentName:"semantics"},(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,o.kt)("mn",{parentName:"mrow"},"0.35"),(0,o.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,o.kt)("mn",{parentName:"mrow"},"0.55"),(0,o.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,o.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"(0.35, 0.55)")))),(0,o.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,o.kt)("span",{parentName:"span",className:"base"},(0,o.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,o.kt)("span",{parentName:"span",className:"mopen"},"("),(0,o.kt)("span",{parentName:"span",className:"mord"},"0.35"),(0,o.kt)("span",{parentName:"span",className:"mpunct"},","),(0,o.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,o.kt)("span",{parentName:"span",className:"mord"},"0.55"),(0,o.kt)("span",{parentName:"span",className:"mclose"},")")))))," now.  It should look something like this:"),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("img",{alt:"img",src:a(94656).Z,width:"963",height:"436"})))),(0,o.kt)("p",null,"Congratulations!  "),(0,o.kt)("h2",{id:"plotting-multiple-populations"},"Plotting multiple populations"),(0,o.kt)("p",null,"Well, but who cares about the average O blood gorup frequency globally? Much more interesting, let's plot the posterior in each population. This should be easy - we just somehow need to call ",(0,o.kt)("inlineCode",{parentName:"p"},"compute_posterior_density()")," for each row of our data, instead of for the whole set.  Here's how:"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Computing posteriors per population")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)(i.Z,{groupId:"style",mdxType:"Tabs"},(0,o.kt)(r.Z,{value:"loop",label:"Using a loop",mdxType:"TabItem"},(0,o.kt)("p",{parentName:"div"},"A boring way to do this is write a loop that runs through the rows and accumulates the results.\nThere's some code below that does it."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"But")," if you've followed any of our earlier tutorials you'll know there's often a simpler, more expressive way to do\nthings in ",(0,o.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org"},"dplyr")," - and there is here too.  See the second tab for a much slicker version."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-r"},"per_population_posterior = tibble()\nfor( i in 1:nrow( data )) {\n    # summarise just one row\n    row = (\n        data[i,]\n        %>% mutate(\n            nA = ( `C/C` + `-/C` ),\n            nB = ( `-/-` )\n        )\n    )\n    per_population_posterior = bind_rows(\n        per_population_posterior,\n        cbind(\n            population = row$population,\n            compute_posterior_density( row$nA, row$nB )\n        )\n    )\n}\n"))),(0,o.kt)(r.Z,{value:"dplyr",label:"Using reframe()",mdxType:"TabItem"},(0,o.kt)("p",{parentName:"div"},"Luckily ",(0,o.kt)("inlineCode",{parentName:"p"},"dplyr()")," has a function that works for this case - ",(0,o.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/reference/reframe.html"},(0,o.kt)("inlineCode",{parentName:"a"},"reframe()")),"."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"reframe()")," works a lot like ",(0,o.kt)("inlineCode",{parentName:"p"},"summarise()")," but allows us to output a whole dataframe per input row.  "),(0,o.kt)("p",{parentName:"div"},"We'll use it with ",(0,o.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/reference/pick.html"},(0,o.kt)("inlineCode",{parentName:"a"},"pick()"))," which lets us pass in just the two variables we need."),(0,o.kt)("p",{parentName:"div"},"So like this:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-r"},"per_population_posterior = (\n    data\n    %>% mutate(\n        nA = ( `C/C` + `-/C` ),\n        nB = ( `-/-` )\n    )\n    %>% group_by( population )\n    %>% reframe( compute_posterior_density( nA, nB ))\n)\n")))))),(0,o.kt)("p",null,"If you look at ",(0,o.kt)("inlineCode",{parentName:"p"},"per_population_data")," you should see it now has thousands of rows (or tens of thousands if you increased the number of ",(0,o.kt)("inlineCode",{parentName:"p"},"at")," values), with the same number of rows per population.  You could count them like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"per_population_posterior %>% group_by( population ) %>% summarise( number_of_rows = n() )\n")),(0,o.kt)("p",null,"Getting ggplot to plot this is now easy - we use a ",(0,o.kt)("strong",{parentName:"p"},"facet"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"p = (\n    ggplot( data = per_population_posterior )\n    + geom_line( aes( x = at, y = posterior ))\n    + facet_grid( population ~ . )\n)\nprint(p)\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(81691).Z,width:"1056",height:"1562"})),(0,o.kt)("p",null,"Cool!"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note on facet_grid()")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"That ",(0,o.kt)("inlineCode",{parentName:"p"},"facet_grid()")," call works like this.  You give it two variables to facet over, written like ",(0,o.kt)("inlineCode",{parentName:"p"},"variable1 ~ variable2"),".  These variables are mapped to rows and columns of the resulting plot. (In our case, we just want to facet over one variable rows, so we do ",(0,o.kt)("inlineCode",{parentName:"p"},"population ~ ."),")."),(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"ggplot()")," then does all the work of splitting up the data up into each of the facets and arranges the plot into rows and columns. It's a very powerful feature for quickly exploring datasets."))),(0,o.kt)("p",null,"As usual, this initial plot isn't quite good enough to start with.  We should do several things:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Those y axis scales are useless - too hard to see. We should get rid of them."),(0,o.kt)("li",{parentName:"ol"},"The facet labels (on the right) are useless as well!  We can't see the population names."),(0,o.kt)("li",{parentName:"ol"},"A more subtle bug is that the posteriors all have slightly different heights (depending on how spread-out the\ndistribution is).  But at the moment they all have the same scale.")),(0,o.kt)("p",null,"All this can be fixed with suitable calls to ggplot.  Let's put this in a function for easy re-use - see the comments in the function for more info:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},'plot_posterior <- function( per_population_posterior ) {\n    result = (\n        ggplot(\n            data = per_population_posterior,\n            aes( x = at, y = posterior )\n        )\n        + geom_line()\n        + facet_grid(\n            population ~ .,\n            # Make y axis facets have their own scales, learnt from the data\n            scales = "free_y"\n        )\n        + theme_minimal(16)\n        + xlab( "O blood group frequency" )\n        + ylab( "Posterior density" )\n        + theme(\n            # remove Y axis tick labels\n            axis.text.y = element_blank(),\n            # rotate facet labels on right of plot\n            strip.text.y.right = element_text(angle = 0, hjust = 0),\n            # rotate overall y axis label 90\n            axis.title.y = element_text(angle = 0, vjust = 0.5)\n        )\n\n    )\n    return( result )\n}\n\nplot_posterior( per_population_posterior )\n')),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:a(46182).Z,width:"2104",height:"1992"})),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"What's going on with those populations, like the Spanish or the English, with very spread-out distributions?"))),(0,o.kt)("h2",{id:"ordering-populations"},"Ordering populations"),(0,o.kt)("p",null,"That's all very well, currently the populations are sorted in alphabetical order.  Wouldn't it be nicer to order the\npopulations by allele frequency? "),(0,o.kt)("p",null,"The way to do this in ggplot is not obvious at first glance - you have to re-order the data itself.  In R, there is a\nspecific way to do this known as a ",(0,o.kt)("strong",{parentName:"p"},"factor"),".  A factor is a set of string values that take one of a set of levels.\nYou specify the order of the levels, and voila, the data is ordered."),(0,o.kt)("p",null,"Let's do that now.  First let's compute the frequency in the original data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"data$O_bld_grp_frequency = data[['-/-']] / ( data[['C/C']] + data[['-/C']] + data[['-/-']])\n")),(0,o.kt)("p",null,"Now let's use that to get an ordered list of populations.  An easy way is to use the ",(0,o.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/reference/arrange.html"},"dplyr ",(0,o.kt)("inlineCode",{parentName:"a"},"arrange()")," function")," to order the dataframe by the frequency, then get the populations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"ordered_populations = (\n    data\n    %>% arrange( O_bld_grp_frequency )\n)$population\n")),(0,o.kt)("p",null,"Finally, we'll convert the ",(0,o.kt)("inlineCode",{parentName:"p"},"population")," column of ",(0,o.kt)("inlineCode",{parentName:"p"},"per_population_posterior")," (and the original data) to a factor with these levels:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"data$population = factor( data$population, levels = ordered_populations )\nper_population_posterior$population = factor( per_population_posterior$population, levels = ordered_populations )\n")),(0,o.kt)("p",null,"That's it!  (If you try ",(0,o.kt)("inlineCode",{parentName:"p"},"str(data)")," you'll see that the ",(0,o.kt)("inlineCode",{parentName:"p"},"population")," column is now a factor.)"),(0,o.kt)("p",null,"Now if you regenerate the above plot, things should be in order."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In which populations is O blood group at lowest frequency?  In which populations at highest frequency?"))),(0,o.kt)("h2",{id:"bayesian-shrinkage"},"Bayesian shrinkage"),(0,o.kt)("p",null,"So far we have been ignoring the prior - the prior was effectively a flat distribution.\nBut let's imagine now we had some prior data in each population.  Say, 20 observations of each allele."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-r"},"\nprior.data = c( nA = 0, nB = 0 )\nper_population_posterior = (\n    data\n    %>% mutate(\n        nA = ( `C/C` + `-/C` ),\n        nB = ( `-/-` )\n    )\n    %>% group_by( population )\n    %>% reframe( compute_posterior_density( nA, nB, prior = prior.data ))\n)\nplot_posterior( per_population_posterior )\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Compare this to your earlier plot."),(0,o.kt)("p",{parentName:"div"},"What has happened to the posteriors?  Are they more or less spread out than before?"),(0,o.kt)("p",{parentName:"div"},"Which populations were affected the most by this?"))),(0,o.kt)("p",null,"What you are witnessing here is ",(0,o.kt)("strong",{parentName:"p"},"bayesian shrinkage"),".  The strong prior information has helped make all the estimates more similar, even though the data differs in each population."),(0,o.kt)("p",null,"Compare the prior data to the sample sizes in each population."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Question")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"What is happening to the Spanish population?  Is the estimate with or without a prior more sensible?"))))}h.isMDXComponent=!0},94656:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/o_bld_group_posterior-c7f7194d0b37367d4df5740d7d45e457.png"},81691:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/o_bld_group_posterior_by_population-f64c81db09a8a89ce97383bf74c248a4.png"},46182:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/o_bld_group_posterior_by_population2-c2acf5695c27a069d9b5de55c618d623.png"}}]);