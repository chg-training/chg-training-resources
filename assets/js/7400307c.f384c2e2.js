"use strict";(self.webpackChunkchg_training_resources=self.webpackChunkchg_training_resources||[]).push([[1733],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>u});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},l=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,i=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=m(a),h=s,u=d["".concat(o,".").concat(h)]||d[h]||c[h]||i;return a?n.createElement(u,r(r({ref:t},l),{},{components:a})):n.createElement(u,r({ref:t},l))}));function u(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=a.length,r=new Array(i);r[0]=h;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:s,r[1]=p;for(var m=2;m<i;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},42936:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=a(87462),s=(a(67294),a(3905));const i={sidebar_position:6},r="Aside: excluding related samples",p={unversionedId:"genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness",id:"genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness",title:"Aside: excluding related samples",description:"Note. This section is optional. We won't actually use it in the assocation test for this tutorial.",source:"@site/docs/genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness.md",sourceDirName:"genome_wide_association_studies/quantitative_trait_gwas",slug:"/genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness",draft:!1,editUrl:"https://github.com/chg-training/chg-training-resources/edit/main/docs/genome_wide_association_studies/quantitative_trait_gwas/sample_relatedness.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"sidebar8",previous:{title:"Estimating relatedness",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/relatedness"},next:{title:"Part 2: Transforming the phenotype data",permalink:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/phenotype_qc"}},o={},m=[{value:"Finding samples to exclude",id:"finding-samples-to-exclude",level:2},{value:"Removing the samples from the dataset",id:"removing-the-samples-from-the-dataset",level:2}],l={toc:m},d="wrapper";function c(e){let{components:t,...a}=e;return(0,s.kt)(d,(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"aside-excluding-related-samples"},"Aside: excluding related samples"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note.")," This section is ",(0,s.kt)("strong",{parentName:"p"},"optional"),". We won't actually use it in the ",(0,s.kt)("a",{parentName:"p",href:"/chg-training-resources/genome_wide_association_studies/quantitative_trait_gwas/testing_for_association"},"assocation test")," for this tutorial."),(0,s.kt)("p",null,"In most GWAS studies, the samples are supposed to be collected without any close relationships - so finding closely\nrelated samples could be a sign of sampling biases.  Closely related samples might also share phenotypes for non-genetic\nreasons (they might be more likely to share environmental exposures than unrelated people, for example if they live in\nthe same families).  For both these reasons it is normal to try to remove close relationships from the data before\nrunning a GWAS."),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"As we are using data simulated from a small region of the genome in this practical, it is not possible to calculate realistic\nrelatedness between individuals in these data.  However, as an example we'll show how this can be done below."),(0,s.kt)("p",{parentName:"div"},"(You ",(0,s.kt)("em",{parentName:"p"},"can")," compute relatedness in the samples from the ",(0,s.kt)("a",{parentName:"p",href:"/chg-training-resources/genome_wide_association_studies/genome_wide_association_analysis/"},"case-control GWAS practical")," if you like.  See the ",(0,s.kt)("a",{parentName:"p",href:"/chg-training-resources/population_genetics/principal_components_analysis/"},"PCA practical")," for more on this.)"),(0,s.kt)("p",{parentName:"div"},"For our purposes we have provided code below for you to try this, but we won't actually use this filter to carrying out\nthe regression analyses in this tutorial."))),(0,s.kt)("h2",{id:"finding-samples-to-exclude"},"Finding samples to exclude"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"plink")," does not directly allow us to filter samples by relatedness. Instead, we will write a small script to make a\nlist of samples to exclude - and then use that file to filter them out in ",(0,s.kt)("inlineCode",{parentName:"p"},"plink"),"."),(0,s.kt)("p",null,"For most of this course we've used R to do our scripting - so let's try something else instead.  We'll try out python\ninstead!  Open a new file, called (say) ",(0,s.kt)("inlineCode",{parentName:"p"},"exclude_high_ibd.py")," and let's add some code. "),(0,s.kt)("p",null,"First, add a function to load the missingness file into a python ",(0,s.kt)("inlineCode",{parentName:"p"},"dict")," structure (which is a 'hash map' i.e. mapping from keys to\nvalues):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'def load_missingness( filename ):\n    """Load the .imiss file into a python dictionary (as a key to value mapping)"""\n    result = {}\n    with open(filename, "r") as missfile:\n        missfile.readline()\n        for line in missfile:\n            fid, iid, pheno_miss, num_miss, num_geno, fmiss = line.strip().split()\n            # Python dicts can have keys that are tuples!\n            # Here we use the pair (fid,iid) as the key\n            result[(fid,iid)] = float(fmiss)\n    return result\n')),(0,s.kt)("p",null,"Next, add a function to read the ",(0,s.kt)("inlineCode",{parentName:"p"},".genome")," file and find high-ibd sample pairs:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'def load_high_ibd_pairs( filename, cutoff = 0.185 ):\n    """Load the .genome file and return pairs of IDs with PI_HAT bigger than the cutoff"""\n    result = set()\n    with open(filename, "r") as ibdfile:\n        ibdfile.readline()\n        for line in ibdfile:\n            fid1, iid1, fid2, iid2, rt, ex, z0, z1, z2, pihat, phe, dst, ppc, ratio = line.strip().split()\n            sid1 = fid1 + "_" + iid1\n            sid2 = fid2 + "_" + iid2\n            if float(pihat) > float(cutoff):\n                result.add(( (fid1,iid1), (fid2,iid2)) )\n    return result\n')),(0,s.kt)("p",null,"Finally let's use that to remove, for each high IBD pair, the sample with the most missingness:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'import sys\n# Read the filenames from the command line arguments\nmissingness_file = sys.argv[1]\nibd_file = sys.argv[2]\noutput_file = sys.argv[3]\n\nprint( "++ Loading missingness data from %s...", missingness_file )\nmissingness = load_missingness( missingness_file )\nprint( "++ Loading high-IBD pairs from %s...",ibd_file )\nhigh_ibd = load_high_ibd_pairs( ibd_file, cutoff = 0.185 )\n\nprint( "++ Computing exclusions..." )\nids_to_exclude = dict()\nfor pair in ibd:\n    # Exclude the sample with greater missingness\n    if missingness[ pair[0] ] > missingness[ pair[1] ]:\n        ids_to_exclude.add( pair[0] )\n    else:\n        ids_to_exclude.add( pair[1] )\n\nprint( "++ Writing exclusions to %s...", output_file )\nwith open( output_file, "w" ) as outfile:\n    fid, iid in ids:\n        outfile.write( fid + "\\t" + iid + "\\n" )\n\nprint( "++ Thank you for using exclude_high_ibd.py" )\n')),(0,s.kt)("p",null,"Put all the above code, with the functions, into a file called ",(0,s.kt)("inlineCode",{parentName:"p"},"exclude_high_ibd.py")," now."),(0,s.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Warning")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"In python you have to be ",(0,s.kt)("strong",{parentName:"p"},"really careful about indentation"),"."),(0,s.kt)("p",{parentName:"div"},"Unlike R, javascript, C++, Rust, or Ruby, which all use ",(0,s.kt)("inlineCode",{parentName:"p"},"{}")," braces - and unlike julia which uses ",(0,s.kt)("inlineCode",{parentName:"p"},"begin")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"end")," -\npython uses indentation to define blocks of code.  If something is not working it may well be that a line of code has\nthe wrong indentation, relative to those around it."),(0,s.kt)("p",{parentName:"div"},"In particular, you must make sure you are either using tabs to indent, or using spaces to indent the above code - mixing the\ntwo will lead to all sorts of problems!  (The snippets above use tabs.)"),(0,s.kt)("p",{parentName:"div"},"If you need a full version of this file, see here."))),(0,s.kt)("h2",{id:"removing-the-samples-from-the-dataset"},"Removing the samples from the dataset"),(0,s.kt)("p",null,"Now let's use that to generate a list of samples to exclude:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"python exclude_missing.py output/AMR_genotypes.imiss output/AMR_genotypes.genome output/AMR_genotypes.relatedness.remove\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note on python versions")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"On a mac, you may find you need to use ",(0,s.kt)("inlineCode",{parentName:"p"},"python3")," to run python, instead of ",(0,s.kt)("inlineCode",{parentName:"p"},"python"),"."))),(0,s.kt)("p",null,"You should now have an output file called ",(0,s.kt)("inlineCode",{parentName:"p"},"output/AMR_genotypes.relatedness.remove")," containing the IDs of samples to remove."),(0,s.kt)("p",null,"Now we've generated a list of samples to remove, we can actually remove them like this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"./plink \\\n--bfile Genotype_data/AMR_genotypes.filtered \\\n--remove output/AMR_genotypes.relatedness.remove \\\n--make-bed \\\n--out Genotype_data/AMR_genotypes.filtered.ibd\n")),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Note on improving the algorithm")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If you look at the above code, you'll see it is pretty simple.  For every pair of samples with high IBD, it selects the sample\nwith the highest missingness, and writes it to the exclusion file."),(0,s.kt)("p",{parentName:"div"},"It's actually easy to do better than this in many cases. A better algorithm finds the sample with the most relationships\n",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("mtext",{parentName:"mrow"},"the\xa0cutoff")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"> \\text{the cutoff}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"the\xa0cutoff"))))))," and removes it.  And then repeats this process with the remaining samples until there aren't any\nhigh IBD pairs left.  This algorithm typically excludes fewer samples while still leaving no high IBD pairs."),(0,s.kt)("p",{parentName:"div"},"This is of course important because the sample size is a key factor in determining the ",(0,s.kt)("strong",{parentName:"p"},"power")," of a GWAS!  Remember,\nall else being equal, the regression standard error scales like"),(0,s.kt)("div",{parentName:"div",className:"math math-display"},(0,s.kt)("span",{parentName:"div",className:"katex-display"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mtext",{parentName:"mrow"},"se"),(0,s.kt)("mo",{parentName:"mrow"},"\u221d"),(0,s.kt)("mfrac",{parentName:"mrow"},(0,s.kt)("mn",{parentName:"mfrac"},"1"),(0,s.kt)("msqrt",{parentName:"mfrac"},(0,s.kt)("mi",{parentName:"msqrt"},"N")))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\text{se} \\propto \\frac{1}{\\sqrt{N}}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"se")),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"\u221d"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"2.2514em",verticalAlign:"-0.93em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,s.kt)("span",{parentName:"span",className:"mfrac"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.3214em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.1833em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord sqrt"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.9267em"}},(0,s.kt)("span",{parentName:"span",className:"svg-align",style:{top:"-3em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord",style:{paddingLeft:"0.833em"}},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N"))),(0,s.kt)("span",{parentName:"span",style:{top:"-2.8867em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"hide-tail",style:{minWidth:"0.853em",height:"1.08em"}},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.08em",viewBox:"0 0 400000 1080",preserveAspectRatio:"xMinYMin slice"},(0,s.kt)("path",{parentName:"svg",d:"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z"}))))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.1133em"}},(0,s.kt)("span",{parentName:"span"}))))))),(0,s.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,s.kt)("span",{parentName:"span",style:{top:"-3.677em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord"},"1")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.93em"}},(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))))))),(0,s.kt)("p",{parentName:"div"},"with the sample size ",(0,s.kt)("span",{parentName:"p",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"N")),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"N")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6833em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10903em"}},"N")))))," of the study."),(0,s.kt)("p",{parentName:"div"},"We ",(0,s.kt)("strong",{parentName:"p"},"really")," don't want to lose samples, unless we have to!"))))}c.isMDXComponent=!0}}]);